"""changin User model

Revision ID: b60cc8316618
Revises: 7315bec58a0c
Create Date: 2024-04-08 06:33:16.182163

"""
from typing import Sequence, Union
from uuid import UUID

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b60cc8316618'
down_revision: Union[str, None] = '7315bec58a0c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'id',
               existing_type=sa.VARCHAR(),
               type_=UUID,
               existing_nullable=False)
    op.alter_column('users', 'camunda_user_id',
               existing_type=sa.VARCHAR(),
               type_=UUID,
               existing_nullable=False)
    op.alter_column('users', 'camunda_key',
               existing_type=sa.VARCHAR(),
               type_=UUID,
               existing_nullable=False)
    op.alter_column('users', 'telegram_user_id',
               existing_type=sa.VARCHAR(),
               type_=sa.Integer(),
               nullable=True,
               autoincrement=True)
    op.alter_column('users', 'webapp_user_id',
               existing_type=sa.VARCHAR(),
               type_=UUID,
               existing_nullable=False)
    op.create_unique_constraint(None, 'users', ['telegram_user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'webapp_user_id',
               existing_type=UUID,
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('users', 'telegram_user_id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(),
               nullable=False,
               autoincrement=True)
    op.alter_column('users', 'camunda_key',
               existing_type=UUID,
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('users', 'camunda_user_id',
               existing_type=UUID,
               type_=sa.VARCHAR(),
               existing_nullable=False)
    op.alter_column('users', 'id',
               existing_type=UUID,
               type_=sa.VARCHAR(),
               existing_nullable=False)
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('confirmed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('fs_uniquifier', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # ### end Alembic commands ###
