@import '@/styles/_mixins';

.container {
  font-size: 16px;
  font-weight: 400;
  line-height: 24px;
  letter-spacing: -0.6px;
}

.entry {
  height: 40px;
  padding: 4px 8px 4px 12px;
  display: flex;
  align-items: center;
  gap: 8px;
  outline: none;
  color: rgb(var(--color-light));

  &:hover,
  &:focus-visible {
    background: rgb(var(--color-bg-40));
  }
}

.indicator {
  width: 20px;
  height: 20px;
}

.dropdown {
  position: fixed;
  z-index: 10000;
  padding: 16px 0;
  background: rgb(var(--color-bg-10));
  border: 1px rgb(var(--color-bg-60)) solid;
  font-size: 16px;
  display: grid;
  grid-template-rows: 0fr;
  overflow: hidden;
  opacity: 0;
  visibility: hidden;
  transition: 0.25s ease;
  transition-property: opacity, margin, grid-template-rows;
  top: calc(var(--_top) * 1px);
  left: calc(var(--_left) * 1px);
  min-width: calc(var(--_width) * 1px);
  max-width: 100%;
  max-height: min(calc(100vh - (var(--_top) * 1px) - 16px), 720px);
  min-height: 40px;

  &.open {
    animation: reveal 0.25s ease forwards;
    grid-template-rows: 1fr;
    overflow: auto;
    opacity: 1;
    visibility: visible;

    @keyframes reveal {
      from {
        opacity: 0;
        transform: translateY(8px);
      }

      to {
        opacity: 1;
        transform: translateY(0);
      }
    }
  }

  @media (max-width: 720px) {
    left: 0;
    right: 0;
    bottom: 40px;
    margin: 16px 0 0;
    top: auto;
    min-width: 0;
    width: 100%;
    max-height: calc(100vh - 128px);
    box-shadow: 0 0 0 max(100vw, 100vh) rgba(var(--color-dark), 0.5);
    display: flex;
    flex-flow: column;
  }
}

.list {
  margin: 0;
  padding: 0;
  list-style: none;
  max-width: 100%;

  @media (min-width: 720.1px) {
    display: table;
  }

  @media (max-width: 720px) {
    width: 100%;
  }
}

.idx {
  color: rgb(var(--color-comment));
  text-align: end;
}

.title {
  text-transform: uppercase;
}

.description {
  color: rgb(var(--color-accent));
}

.icon {
  padding-top: 2px;
  text-align: center;
  vertical-align: top;
  width: 24px;
  color: rgb(var(--color-accent));

  & > svg {
    width: 24px;
    height: 24px;
    vertical-align: middle;
  }
}

.item {
  width: 100%;
  color: inherit;
  text-decoration: none;
  gap: 2px 16px;
  align-items: stretch;

  @media (min-width: 720.1px) {
    display: table-row;
  }

  @media (max-width: 720px) {
    padding: 4px 16px;
    display: grid;
    white-space: normal;

    &.hasIcon {
      grid-template-columns: 24px 1fr;
      grid-template-areas:
        'icon title'
        '. description';
    }

    &:not(.hasIcon) {
      display: flex;
      flex-flow: column;

      .icon {
        display: none;
      }
    }
  }

  & > * {
    @media (min-width: 720.1px) {
      padding: 4px 8px;
      height: 24px;
      vertical-align: middle;
      display: table-cell;
    }
  }

  & > .icon {
    grid-area: icon;
  }

  & > .title {
    grid-area: title;
  }

  & > .description {
    grid-area: description;
  }

  & > .pending {
    @include element-preloader-animated;
    height: 24px;
  }

  @media (min-width: 720.1px) {
    & > :first-child {
      padding-left: 16px;
    }

    & > :last-child {
      padding-right: 16px;
    }
  }

  &.hilite {
    background: rgb(var(--color-bg-30));
  }

  &.selected {
    background: rgb(var(--color-accent));
    color: rgb(var(--color-dark));

    .icon,
    .description {
      color: rgb(var(--color-dark));
    }
  }

  &:not(:first-child) > .topic {
    padding-top: 20px;
  }

  &.action {
    & > :first-child {
      &::before {
        content: 'â€” ';
      }
    }
  }
}

.topic {
  font-size: 14px;
  font-weight: 400;
  line-height: 24px;
  color: rgb(var(--color-comment));

  & > * {
    color: inherit;
    font: inherit;
    text-transform: none;
  }
}

.search {
  flex: 0 0 auto;
  width: 40px;

  &Combo {
    display: flex;
    align-items: center;
    overflow: hidden;
  }

  &Icon {
    flex: 0 0 auto;
    width: 40px;
    height: 40px;
    padding: 10px;
    margin-right: -40px;
  }

  &Input {
    width: 0;
    flex: 1 0 0;
    height: 40px;
    border: 1px rgba(var(--color-info-a), 0) solid;
    padding: 4px 8px 4px 40px;
    background: none;
    outline: none;
    color: rgb(var(--color-light));
    transition: 0.25s ease;
    font: inherit;
  }

  &Results {
    border-color: rgb(var(--color-info-a));
  }

  &.active {
    flex-grow: 1;

    .searchIcon {
      color: rgb(var(--color-light));
    }

    .searchInput {
      &:focus {
        border-color: rgb(var(--color-info-a));
      }
    }
  }

  &:not(.active) {
    .searchIcon {
      cursor: pointer;
      transition: 0.25s ease;
    }

    &:hover {
      .searchIcon {
        color: rgb(var(--color-hover));
      }
    }
  }
}
