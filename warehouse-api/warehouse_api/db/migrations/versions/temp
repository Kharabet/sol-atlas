from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = "215932c005b8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Create the user table
    op.create_table(
        "user",
        sa.Column(
            "id", sa.Integer(), primary_key=True, autoincrement=True, nullable=False
        ),
        sa.Column(
            "org_id", sa.Integer(), sa.ForeignKey("organizations.id"), nullable=True
        ),
        sa.Column("name", sa.String(length=320), nullable=True),
        sa.Column("email", sa.String(length=320), nullable=True),
        sa.Column("password_hash", sa.String(length=128), nullable=True),
        sa.Column("group_ids", sa.ARRAY(sa.Integer()), nullable=True),
        sa.Column("api_key", sa.String(length=40), unique=True, nullable=True),
        sa.Column("disabled_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("details", sa.JSON(), nullable=True, server_default="{}"),
        sa.Column("active_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("_profile_image_url", sa.Text(), nullable=True),
        sa.Column(
            "is_invitation_pending",
            sa.Boolean(),
            nullable=True,
            server_default=sa.text("false"),
        ),
        sa.Column(
            "is_email_verified",
            sa.Boolean(),
            nullable=True,
            server_default=sa.text("true"),
        ),
        sa.Column("telegram_id", sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_index(
        op.f("ix_user_org_id_email"), "user", ["org_id", "email"], unique=True
    )

    # Create the oauth_account table
    op.create_table(
        "oauth_account",
        sa.Column(
            "id", sa.Integer(), primary_key=True, autoincrement=True, nullable=False
        ),
        sa.Column(
            "user_id",
            sa.Integer(),
            sa.ForeignKey("user.id", ondelete="cascade"),
            nullable=False,
        ),
        sa.Column("oauth_name", sa.String(length=100), nullable=False),
        sa.Column("access_token", sa.String(length=1024), nullable=False),
        sa.Column("expires_at", sa.Integer(), nullable=True),
        sa.Column("refresh_token", sa.String(length=1024), nullable=True),
        sa.Column("account_id", sa.String(length=320), nullable=False),
        sa.Column("account_email", sa.String(length=320), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_oauth_account_account_id"),
        "oauth_account",
        ["account_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_oauth_account_oauth_name"),
        "oauth_account",
        ["oauth_name"],
        unique=False,
    )

    # Create the web3_wallet table
    op.create_table(
        "web3_wallet",
        sa.Column(
            "id", sa.Integer(), primary_key=True, autoincrement=True, nullable=False
        ),
        sa.Column(
            "user_id",
            sa.Integer(),
            sa.ForeignKey("user.id", ondelete="CASCADE"),
            nullable=True,
        ),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("network", sa.String(), nullable=False),
    )
    op.create_index(op.f("ix_web3_wallet_id"), "web3_wallet", ["id"], unique=False)

    # Create the telegram_users table
    op.create_table(
        "telegram_users",
        sa.Column(
            "id", sa.Integer(), primary_key=True, autoincrement=True, nullable=False
        ),
        sa.Column("telegram_id", sa.Integer(), nullable=False),
        sa.Column("is_premium", sa.Boolean(), default=False),
        sa.Column(
            "user_id",
            sa.Integer(),
            sa.ForeignKey("user.id", ondelete="CASCADE"),
            nullable=True,
        ),
    )
    op.create_index(op.f("ix_telegram_users_id"), "telegram_users", ["id"], unique=False)


def downgrade() -> None:
    # Drop indexes and tables in reverse order
    op.drop_index(op.f("ix_telegram_users_id"), table_name="telegram_users")
    op.drop_table("telegram_users")
    op.drop_index(op.f("ix_web3_wallet_id"), table_name="web3_wallet")
    op.drop_table("web3_wallet")
    op.drop_index(op.f("ix_oauth_account_oauth_name"), table_name="oauth_account")
    op.drop_index(op.f("ix_oauth_account_account_id"), table_name="oauth_account")
    op.drop_table("oauth_account")
    op.drop_index(op.f("ix_user_org_id_email"), table_name="user")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
